// <auto-generated />
using System;
using CWG.API.Workflow.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CWG.API.Workflow.Data.Migrations
{
    [DbContext(typeof(CWGDbContext))]
    [Migration("20190117095810_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846");

            modelBuilder.Entity("CWG.API.Workflow.Data.Entities.Auth.AuthRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name");

                    b.HasKey("RoleId");

                    b.ToTable("AuthRole","auth");

                    b.HasData(
                        new { RoleId = 1, Name = "Super Admin" }
                    );
                });

            modelBuilder.Entity("CWG.API.Workflow.Data.Entities.Auth.AuthUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<string>("Email");

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EmailConfirmedCode");

                    b.Property<string>("FirstName");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<bool?>("IsFirstTimeLogin");

                    b.Property<bool?>("IsTwoFactoredEnabled");

                    b.Property<DateTime?>("LastLoginTime");

                    b.Property<string>("LastName");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<string>("PasswordResetCode");

                    b.Property<string>("Phone");

                    b.Property<bool?>("PhoneConfirmed");

                    b.Property<string>("PhoneConfirmedCode");

                    b.Property<string>("PictureUrl");

                    b.Property<byte[]>("SecurityStamp");

                    b.Property<string>("UserName");

                    b.HasKey("UserId");

                    b.ToTable("AuthUser","auth");

                    b.HasData(
                        new { UserId = 1, CreatedOn = new DateTime(2019, 1, 17, 9, 58, 10, 16, DateTimeKind.Utc), Email = "info@codewithgaurav.com", EmailConfirmed = true, FirstName = "System", IsActive = true, IsDeleted = false, IsFirstTimeLogin = true, IsTwoFactoredEnabled = false, LastName = "Admin", PasswordHash = new byte[] { 140, 219, 82, 99, 102, 69, 70, 123, 97, 59, 47, 94, 7, 71, 236, 153, 109, 94, 224, 104, 181, 141, 20, 140, 163, 182, 149, 29, 184, 123, 136, 238, 7, 183, 230, 45, 55, 175, 165, 76, 68, 233, 194, 107, 18, 66, 71, 69, 152, 232, 176, 16, 119, 233, 30, 82, 25, 72, 191, 178, 159, 132, 98, 154 }, Phone = "999999999", PhoneConfirmed = true, SecurityStamp = new byte[] { 2, 171, 143, 104, 93, 31, 55, 21, 183, 218, 132, 88, 214, 90, 89, 255, 31, 132, 143, 99, 34, 97, 48, 177, 226, 3, 69, 139, 196, 166, 147, 71, 167, 69, 186, 100, 195, 34, 228, 104, 105, 29, 213, 40, 152, 90, 173, 224, 222, 213, 235, 187, 240, 1, 201, 37, 46, 249, 16, 201, 27, 154, 185, 255, 248, 33, 46, 42, 171, 238, 41, 227, 200, 163, 129, 5, 124, 249, 18, 1, 173, 190, 191, 211, 60, 97, 67, 29, 197, 30, 19, 87, 213, 209, 156, 72, 90, 149, 30, 118, 156, 231, 159, 232, 16, 88, 41, 189, 120, 207, 96, 205, 239, 249, 176, 238, 31, 247, 185, 247, 226, 234, 249, 180, 107, 74, 185, 133 }, UserName = "sysadmin" }
                    );
                });

            modelBuilder.Entity("CWG.API.Workflow.Data.Entities.Auth.AuthUserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("UserRoleId");

                    b.ToTable("AuthUserRole","auth");

                    b.HasData(
                        new { UserRoleId = 1, IsActive = true, IsDeleted = false, RoleId = 1, UserId = 1 }
                    );
                });

            modelBuilder.Entity("CWG.API.Workflow.Data.Entities.ClientModule.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("City")
                        .HasMaxLength(100);

                    b.Property<string>("Country")
                        .HasMaxLength(100);

                    b.Property<int?>("CreatedBy");

                    b.Property<DateTime?>("CreatedOn");

                    b.Property<int?>("DeletedBy");

                    b.Property<DateTime?>("DeletedOn");

                    b.Property<DateTime?>("Effective_Date");

                    b.Property<bool?>("IsActive");

                    b.Property<bool?>("IsDeleted");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(500);

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<int?>("ModifiedBy");

                    b.Property<DateTime?>("ModifiedOn");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256);

                    b.Property<string>("OfficeNo")
                        .HasMaxLength(15);

                    b.Property<string>("Pincode")
                        .HasMaxLength(10);

                    b.Property<string>("StateName")
                        .HasMaxLength(100);

                    b.Property<DateTime?>("Termination_Date");

                    b.HasKey("ClientId");

                    b.ToTable("Client","cl");
                });
#pragma warning restore 612, 618
        }
    }
}
